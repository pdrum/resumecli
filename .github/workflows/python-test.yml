name: Python Tests and Linting

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libcairo2-dev libgirepository1.0-dev libpango1.0-dev libgdk-pixbuf2.0-dev libffi-dev

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install pygobject3 gtk+3 libffi gobject-introspection cairo pango gdk-pixbuf
        echo "DYLD_LIBRARY_PATH=$(brew --prefix)/lib" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$(brew --prefix)/lib/pkgconfig" >> $GITHUB_ENV
        echo "XDG_DATA_DIRS=$(brew --prefix)/share" >> $GITHUB_ENV
        echo "GI_TYPELIB_PATH=$(brew --prefix)/lib/girepository-1.0" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .

    - name: Run flake8
      run: |
        flake8 src tests

    - name: Test with pytest
      run: |
        pytest tests/
      env:
        DYLD_LIBRARY_PATH: ${{ env.DYLD_LIBRARY_PATH }}
        PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}
        XDG_DATA_DIRS: ${{ env.XDG_DATA_DIRS }}
        GI_TYPELIB_PATH: ${{ env.GI_TYPELIB_PATH }}
